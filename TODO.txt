* Allow for a search via JSON notation (like mongo) or SQL (converter to JSON notation)...

* db.View
	- A combination of tables into one 'table'
	
* db.Table
	- Contains a list of models of the same class
	- combines streams and models 
	- $dbIndex : global index for the objects being loaded in?
	* insert (  )
	* update ( expects item to be there )
	* load ( collision tolerant insert )

* db.Collection

* db.Model extends bmoor.model.Basic
	- models can have joins
		* defintion.model - consumed by onMake, might make stuff for constructor?
			* addChild - function to connect a lower model
			* addParent - function to connect a higher model
		- models can have sub models defined ( right join )
		* leftJoin : {
			method : {
				joinOn : ['some','attributes'],
				joinTo : ['some','attributes'],
				table : 'some.table.class' (will contain model and service)
			}
		}
		- models can have parent models defined ( left join )
		* leftJoin : {
			method : {
				joinOn : ['some','attributes'],
				joinTo : ['some','attributes'],
				table : 'some.table.class' (will contain model and service)
			}
		}
		- [] notation implies an many join, lack implies one (enforce?)